#!/bin/bash

obsrecord_ () {

  local collection="$1"
  local profile="$2"
  local capturedir="$3"

  #echo "$capturedir"
	#
	status="$(obs-py --version)" > /dev/null 2>&1	
	if [[ $status != ok ]];then

  #TODO move to separate obs start command
    obs \
    --minimize-to-tray \
    --collection "$collection" \
    --profile "$profile" \
    &>/dev/null &
 
    sleep 15

	fi

    #local scenestatus=$(obs-cli SetCurrentScene='{"scene-name" : "Starting Soon"}'|jq -r '.[].status')
  local scenestatus=$(obs-py --scenechange "Starting Soon")
	echo "Scene Status - $scenestatus" 
  sleep 2
    
  # example   local recordingfolderstring = "'{ "rec-folder":"/home/tony/GameCaptures/$capturedir"}'"
  #local recdir="SetRecordingFolder="\'"{\"rec-folder\": \"/"home/tony/GameCaptures/$capturedir"/\" }"\'
  #local recdirstatus=$(echo "$recdir" |xargs obs-cli | jq -r '.[].status')
			

  #echo "Recording Directory Status - $recdirstatus"
      
  #local recordingstatus="$(obs-cli StartRecording | jq -r '.[].status')"
	local recordingstatus="$(obs-py --record-on "$capturedir")"

  echo "Recording Directory Status - $recordingstatus"
  echo "Recording Status - $recordingstatus"
      
      #set recording status manually
  if [[ $recordingstatus == ok ]]; then
    echo "true" > ~/obsrecordingstatus
  fi       

}

obsrecord_ "$1" "$2" "$3"
