#!/bin/bash

foo () {
  local first=$1
  echo "Would foo with $first."
}

start () {
  
  local directory=$1
  
 # echo "To record a new video and save in the correct directory"
  local account="$1"

 
  #TODO set options for obs command line to stream to different accounts, fortiesgamer, studywithtony, etc
 
  #TODO obs command line option
 
   #echo "To switch obs on with correct setting to stream to various accounts"
 
  case "$account" in
 
    fortiesgamer)
  
      local game="$2"
         [[ ! -d ~/GameCaptures/"$game" ]] && read -p "New Game? (y/n)" response
            if [ $response == "y" ]; then
              echo "gamecaptures new-game"
            elif [ "$response" == "n" ]; then
              local OLD_IFS=${IFS};IFS=$'\n'
              local array=("$(find ~/GameCaptures/ -maxdepth 1 -type d -printf '%f\n')") 
              select item in ${array[@]};do
                 game="$item"
                 IFS="${OLD_IFS}"
                 break
              done    
            fi
 
      local gamename=$(lutrisgameindex "$game")

      sensoroverlay
      timeoverlay
 
      #TODO select here game and set $game and $lutrisgamename!
      #set currentstream for twitch api and weechat
      #   echo "fortiesgamer" > currentstream
 
      obs \
        --minimize-to-tray \
        --collection "fortiesgamer twitch" \
        --profile "fortiesgamer" \
         &>/dev/null &
 
      sleep 5
 
      #obs-cli SetRecordingFolder "/home/tony/GameCaptures/$game"
      #obs-cli StartRecording   
        
      lutris lutris:rungame/"$gamename" &>/dev/null &

  ;;

  studywithtony)
 
   #    echo "studywithtony" > currentchannel
 
       obs \
         --mininze-to-tray \
         --collection "studywithtony twitch" \
         --profile "studywithtony" \
           &>/dev/null &
 
       sleep 5
 
       recdir="/home/tony/GameCaptures/livestudy/$(datepath)"
 
       #if [ ! -d "$recdir" ]; then
       #  mkdir -p "$recdir"
       #fi

       #obs-cli SetRecordingFolder "$recdir"
       #obs-cli StartRecording

  
       tmuxlivestudy

       #markcreatefile create 
  
   ;;

  *)

    echo "Whaaat?"
  ;;
esac

}

stop () {

  echo "To stop recording"
  #TODO current stream
  #obs-cli StopRecording
  markfinish
}


############################## Main Command  #############################

subcommand="${1-usage}"
shift 2>/dev/null

if [ -z "$subcommand" ]; then
    usage
    exit 1
fi

commands () {
    echo ${commands[@]}
}

declare -a commands=(foo commands start stop)

for i in ${commands[@]}; do
    if [[ "$i" == "$subcommand" ]]; then
        "$subcommand" "$@"
        exit 0
    fi
done

######################### Tab Completion Context ########################

# remember COMP_LINE is changed by shift
if [ -n "$COMP_LINE" ]; then
    for cmd in ${commands[@]}; do 
        [[ "${cmd:0:${#1}}" == "$1" ]] && echo $cmd
    done
    exit 0
fi


## set up auto complate by running 'complete -C ./example ./example'
