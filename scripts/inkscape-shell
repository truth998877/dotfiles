#!/bin/bash

#a limited bash interface to inkscape

activate () {

xdotool search --class Inkscape windowactivate %@ > /dev/null 2>&1

}

presskey () {

  local key="$@"
  xdotool search --class Inkscape key --window %@ "$key" > /dev/null 2>&1

}

holdkey () {

  local key="$@"

  xdotool search --class Inkscape keydown --window %2 "$key"

}

p () {

#  activate

  presskey ctrl+v


}

paste-style () {

  #paste style

  presskey ctrl+Shift+v


}


quit () {

 exit

}


e () {

 presskey e

}

r () {

 presskey r

}

pen () {

 presskey p

}

u () {

 presskey ctrl+z

}

re () {

  presskey Shift+ctrl+z

}

s () {

  presskey s

}

y () {

 presskey ctrl+c

}

t () {

  presskey Tab

}

c () {

  presskey ctrl+x

}


circle () {


xclip -selection c -target 'image/x-inkscape-svg' ~/svg/circle.svg
p

}

graph-paper () {

local svgstring=$(<~/svg/Graph-paper.svg)

#xclip -selection c -target 'image/x-inkscape-svg' ~/svg/Graph-paper.svg
echo "$svgstring" |xclip -selection c -target 'image/x-inkscape-svg'
p

}

draw-graph () {

echo "To draw a graph"
#set paper size & orientation
#set origin location (bottom left or middle, as calculated from paper size and orientation)
#set x-axis range
#set y-axis range
#generate points
#transform points into paper coordinates based of paper size, origin location, x-axis range and y-axis range
#add multiple data sets
#add legend

}

style () {
#TODO load svg style string from file, make substitutions a-la Rob's snip tool
#TODO style creation function
xclip -selection c -target 'image/x-inkscape-svg' ~/svg/style.svg
presskey ctrl+Shift+v 

}

#TODO instead of having a function for each object, create a add-object function whose argument is the filename of the object to copy
#TODO objects to add - square, rectangle, eclipse, triangles, polygons, arcs, up down left right diagonal arched single and double ended arrows, xy graph no grid, xy graph with grid, xyz graph, 
#graph paper

while read line;do
  #if line is a single character
  "$line"
  #if line is more than one character
  #probably apply-style
done < "${1:-/dev/stdin}"
