#!/bin/bash

#reset tokens notes - 1) get short access token from graph API explorer, 2) setshortaccesstoken, 3) setlongaccesstoken, 4) setpageaccesstoken, 5) should be good to go

#TODO needs to handle multiple pages - move the secrets into directories which correspond to their page, add an argument to all functions which sets the directory from which to retrieve the secrets for the desired page. Perhaps retire fbsecrets and just echo the secrets directly?


getshortaccesstoken () {

  local page="$1"

  echo "$(</home/tony/.secrets/facebook/$page/shortaccesstoken)"

}


getappid () {

echo "$(</home/tony/.secrets/facebook/fortiesgamer/appid)"

}

getappsecret () {


echo "$(</home/tony/.secrets/facebook/fortiesgamer/appsecret)"


}


getpageid () {

  page="$1"
  echo "$(</home/tony/.secrets/facebook/"$page"/pageid)"

}



setshortaccesstoken () {

  page="$1"
  echo "$2" > "/home/tony/.secrets/facebook/$page/shortaccesstoken" 

}

exchangetoken () {

  local page="$1"

  local shortaccesstoken=$(getshortaccesstoken "$page")
  local appid=$(getappid)
  local appsecret=$(getappsecret)

  curl -X GET "https://graph.facebook.com/oauth/access_token?grant_type=fb_exchange_token&client_id=$appid&client_secret=$appsecret&fb_exchange_token=$shortaccesstoken"

}

setlongaccesstoken () {

  local page="$1"

  exchangetoken "$page"|jq -r '.access_token' > "/home/tony/.secrets/facebook/$page/longaccesstoken"

}

getlongaccesstoken () {

  local page="$1"

  echo "$(</home/tony/.secrets/facebook/"$page"/longaccesstoken)"

}

setpageaccesstoken () { 

  local page="$1"

  local pageid="$(getpageid $page)"
  local longtoken="$(getlongaccesstoken $page)"

  curl -X GET "https://graph.facebook.com/$pageid?fields=access_token&access_token=$longtoken" |jq -r '.access_token' > "/home/tony/.secrets/facebook/$page/pageaccesstoken"

}

getpageaccesstoken () {

  local page="$1"
  echo "$(</home/tony/.secrets/facebook/"$page"/pageaccesstoken)"

}

foo () {
  local first=$1
  echo "Would foo with $first."
}

postmessage2page () {
#TODO handle token and page id better

  local page="$1"
  shift 1
  
  local message="$*"
  local message=${message// /%20}

  curl -s -X POST \
    "https://graph.facebook.com/v10.0/$(getpageid $page)/feed?message="$message"&access_token=$(getpageaccesstoken $page)" #|jq -r '.id'

}


postlink2page () {
#TODO handle token and page id better

  local page="$1"
  local link="$2"
  shift 2
  local message="$*"
  local message=${message// /%20}

  curl -s -i -X POST \
    "https://graph.facebook.com/v10.0/$(getpageid $page)/feed?&access_token=$(getpageaccesstoken $page)&message=$message&link=$link" > /dev/null

}


############################## Main Command  #############################

subcommand="${1-usage}"
shift 2>/dev/null

if [ -z "$subcommand" ]; then
    usage
    exit 1
fi

commands () {
    echo ${commands[@]}
}

declare -a commands=(foo commands setshortaccesstoken setlongaccesstoken getlongaccesstoken exchangetoken setpageaccesstoken getpageaccesstoken postmessage2page postlink2page)

for i in ${commands[@]}; do
    if [[ "$i" == "$subcommand" ]]; then
        "$subcommand" "$@"
        exit 0
    fi
done

######################### Tab Completion Context ########################

# remember COMP_LINE is changed by shift
if [ -n "$COMP_LINE" ]; then
    for cmd in ${commands[@]}; do 
        [[ "${cmd:0:${#1}}" == "$1" ]] && echo $cmd
    done
    exit 0
fi


## set up auto complate by running 'complete -C ./example ./example'
