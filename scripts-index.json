{
  "commands": [
    {
      "name": "test 1",
      "description": "test 1 command description",
      "end": "front",
      "platform": "darwin",
      "locality": "none",
      "environment variables": [
        {
          "name": "test 1 env var 1",
          "description": "test 1 env var 1 description"
        },
        {
          "name": "test 1 env var 2",
          "description": "test 1 env var 2 description"
        }
      ],
      "output files": [
        {
          "name": "test 1 output file 1",
          "description": "test 1 output file 1 description"
        },
        {
          "name": "test 1 output file 2",
          "description": "test 1 output file 2 description"
        }
      ],
      "functions": [
        {
          "name": "test 1 function 1 name",
          "description": "test 1 function 1 description",
          "input arguments": [
            {
              "argument": "test 1 function 1 argument 1",
              "description": "test 1 function 1 argument 1  description"
            },
            {
              "argument": "test 1 function 1 argument 2",
              "description": "test 1 function 1 argument 2 description"
            }
          ]
        },
        {
          "name": "test 1 function 2 name",
          "description": "test 1 function 2 description",
          "input arguments": [
            {
              "argument": "test 1 function 2 argument 1",
              "description": "test 1 function 2 argument 1  description"
            },
            {
              "argument": "test 1 function 2 argument 2",
              "description": "test 1 function 2 argument 2 description"
            }
          ]
        }
      ],
      "associated commands": [
        "test 1 command 1",
        "test 1 command 2"
      ],
      "dependants": [
        "test 1 dependant 1",
        "test 1 dependant 2"
      ],
      "logfile": "test 1 log file",
      "status": "test 1 status"
    },
    {
      "name": "test 2",
      "description": "test 2 command description",
      "end": "front",
      "platform": "darwin",
      "locality": "none",
      "environment variables": [
        {
          "name": "test 2 env var 1",
          "description": "test 1 env var 1 description"
        },
        {
          "name": "test 2 env var 2",
          "description": "test 1 env var 2 description"
        }
      ],
      "output files": [
        {
          "name": "test 2 output file 1",
          "description": "test 1 output file 1 description"
        },
        {
          "name": "test 2 output file 2",
          "description": "test 1 output file 2 description"
        }
      ],
      "functions": [
        {
          "name": "test 2 function 1 name",
          "description": "test 2 function 1 description",
          "input arguments": [
            {
              "argument": "test 2 function 1 argument 1",
              "description": "test 2 function 1 argument 1  description"
            },
            {
              "argument": "test 2 function 1 argument 2",
              "description": "test 2 function 1 argument 2 description"
            }
          ]
        },
        {
          "name": "test 2 function 2 name",
          "description": "test 2 function 2 description",
          "input arguments": [
            {
              "argument": "test 2 function 2  argument 1",
              "description": "test 2 function 2  argument 1  description"
            },
            {
              "argument": "test 2 function 2 argument 2",
              "description": "test 2 function 2  argument 2 description"
            }
          ]
        }
      ],
      "associated commands": [
        "test 2 command 1",
        "test 2 command 2"
      ],
      "dependants": [
        "test 2 dependant 1",
        "test 2 dependant 2"
      ],
      "logfile": "test 2 log file",
      "status": "test 2 status"
    },
    {
      "name": "todo-done",
      "description": "marks a 'to-do' as done in the current log book",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [
        {
          "name": "CURRENTLOGBOOK",
          "description": "the log book currently selected"
        },
        {
          "name": "LOGBOOKSINDEX",
          "description": "the log books index file currently in use"
        }
      ],
      "output files": [],
      "functions": [],
      "associated commands": [],
      "dependants": [],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "tmuxblastwave",
      "description": "brings up blastwave's irc channel in weechat using a tmux pane",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [],
      "dependants": [
        "tmux",
        "weechat"
      ],
      "logfile": "None",
      "status": "functioning"
    },
    {
      "name": "timeofday",
      "description": "echoes Morning, Afternoon or evening depending on the current hour",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [],
      "dependants": [
        "date"
      ],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "picedit",
      "description": "convert front end to carry out commonly used picture edits",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [
        {
          "name": "depends on function called",
          "description": "depends on function called"
        }
      ],
      "functions": [
        {
          "name": "foo",
          "description": "bash completion example function"
        },
        {
          "name": "tile",
          "description": "time supplied image file according to the second (x) and third (y) arguments"
        },
        {
          "name": "overlay",
          "description": "removes the background of the given image file and makes it transparent for use on top of a video or live stream"
        },
        {
          "name": "fbprofilepic",
          "description": "sizes the given picture file according to th ecurrent facebook profile picture size requirements"
        },
        {
          "name": "fbbannerpic",
          "description": "sizes the given picutre file accoding to the current facebook banner picture size requirements"
        },
        {
          "name": "twitchprofilepic",
          "description": "sizes the given picture file according to the current twitter profile picture size requirements"
        },
        {
          "name": "twitchbannerpic",
          "description": "sizes the given picture file to the current twitch banner picture size requirements"
        },
        {
          "name": "twitterbannerpic",
          "description": "sizes the gen picture file to the crrent twitter banner picture size requirements"
        },
        {
          "name": "twitterprofilepic",
          "description": "sizes the given picture file to the current twitter profile picture size requirements"
        },
        {
          "name": "ytprofilepic",
          "description": "sizes the gien picture file to the current youtube profile picture size requirements"
        },
        {
          "name": "ytbannerpic ",
          "description": "sizes the given picture file to the current youtube banner picture size requirements"
        },
        {
          "name": "allbanners",
          "description": "takes the supplied picture file and passes it to all of the banner picture sizing functions"
        },
        {
          "name": "shadowannotate",
          "description": "adds added up to two lines of shadowed text (a2 line 1, a3 line 2) to the supplied picture file (a1) using the supplied font (a4) and font size(a5) in a given position (a6) using a given stroke colour (a7) and fill colour (a8) to a given output filename (a9)"
        },
        {
          "name": "bubbletext ",
          "description": "create a bubble text image using the supplied text (a1), the font (a2), the font size (a3), the fill colour (a4), the line colour (a5) and outputs to the filename given in a6"
        },
        {
          "name": "hozappend",
          "description": "appends two picture files horizontally, a1 left picture, a2 right picture, output filename a3"
        },
        {
          "name": "vertappend",
          "description": "appends to picture file vertically, a1 top imange, a2 bottom images, a3 output filename"
        },
        {
          "name": "rb-radial-gradient",
          "description": "creates a radial gradient suitable for use on redbubble, a1 colour 1, a2 colour 2"
        },
        {
          "name": "rb-tile",
          "description": "tiles an image suitable for use on redbubble, a1 filename, output file ...-rb-tiled.png"
        },
        {
          "name": "commands",
          "description": "bash tab completion function"
        }
      ],
      "associated commands": [],
      "dependants": [
        "convert"
      ],
      "logfile": "None",
      "status": "all functions functioning"
    },
    {
      "name": "mpvnico",
      "description": "brings up nico stream either on genunix or twitch (a1)",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "mpv*"
      ],
      "dependants": [],
      "logfile": "None",
      "status": "functioning"
    },
    {
      "name": "mpvlana_lux",
      "description": "brings up lana_lux's twitch stream using mpvastream",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "mpvastream",
        "mpv*"
      ],
      "dependants": [],
      "logfile": "None",
      "status": "functioning"
    },
    {
      "name": "blankpane",
      "description": "blanks a tmux pane",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "hidecursor"
      ],
      "dependants": [],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "mpvdonho",
      "description": "brings up don ho's twitch stream in mpv using mpvastream",
      "end": "fron",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "mpvastream",
        "mpv*"
      ],
      "dependants": [],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "clb-loc",
      "description": "echoes the file path to the current log file currently selected on the system used",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [
        {
          "name": "CURRENTLOGBOOK",
          "description": "the currently selected logbook"
        },
        {
          "name": "LOGBOOKINDEX",
          "description": "the current log book index in use"
        }
      ],
      "output files": [],
      "functions": [],
      "associated commands": [],
      "dependants": [],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "mdfigure-dev",
      "description": "mdfigure developement code",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [
        {
          "name": "figure_",
          "description": "echoes the figures filename"
        },
        {
          "name": "figuresnip_",
          "description": "when called from vim, creates a figure using the vim line upon which it is called, launches inkscape and the dev version of inkscape shell in a tmux pane"
        }
      ],
      "associated commands": [
        "snip",
        "inkscape-shell",
        "inkscape-shell-dev",
        "snip-dev"
      ],
      "dependants": [
        "inkscape",
        "wmctrl",
        "tmux"
      ],
      "logfile": "None",
      "status": "developement code"
    },
    {
      "name": "tmuxratbarf",
      "description": "brings up Dennis's stealth twitch stream",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [],
      "dependants": [],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "tmuxnico",
      "description": "brings up nico's live stream, his irc channel in weechat arranged in a tmux window",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [
        {
          "name": "WEECHATTMUXY",
          "description": "number of lines allocated to the tmux pane containing weechat"
        },
        {
          "name": "WEECHATMUXX",
          "description": "number of columns allocated to the tmux pane containing weechat"
        }
      ],
      "output files": [],
      "functions": [],
      "associated commands": [
        "tmux*"
      ],
      "dependants": [
        "tmux",
        "weechat"
      ],
      "logfile": "None",
      "status": "the required arguments needs to be added to mpvnico to bring up the stream from either twitch or genunix, which ever is desired"
    },
    {
      "name": "mpvfreckledscience",
      "description": "brings up freckledscience's twitch stream in mpv using mpvastream",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "mpv*",
        "mpvastream"
      ],
      "dependants": [],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "mpvratbarf",
      "description": "brings up Dennis's stealth twitch stream in mpv using mpvastream",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "mpv*",
        "mpvastream"
      ],
      "dependants": [],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "hnow",
      "description": "echoes the date and time in a level 2 md heading",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "hnow-l"
      ],
      "dependants": [
        "date"
      ],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "add-ll",
      "description": "adds a long log by opening the current logbook in vim having echoed the date and time into a level 2 md heading (hnow-l)",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [],
      "output files": [],
      "functions": [],
      "associated commands": [
        "hnow-l",
        "clb-loc"
      ],
      "dependants": [
        "vim"
      ],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "add-lb",
      "description": "adds a new logbook, sets the new logbook to the current logbook and echoes its title to it",
      "end": "front",
      "platform": "al",
      "locality": "none",
      "environment variables": [
        {
          "name": "LOGBOOKS",
          "description": "root directory of the logbooks currently in use"
        },
        {
          "name": "LOGBOOKSINDEX",
          "description": "log book index file currently in use"
        }
      ],
      "output files": [
        {
          "name": "$LOGBOOKS/$location/README.md",
          "description": "log book file"
        }
      ],
      "functions": [],
      "associated commands": [
        "set-clb-1",
        "add-ql"
      ],
      "dependants": [
        "jq"
      ],
      "logfile": "None",
      "status": "functional"
    },
    {
      "name": "plot",
      "description": "gnuplot front end",
      "end": "front",
      "platform": "all",
      "locality": "none",
      "environment variables": [
        {
          "name": "HOME",
          "description": "home directory"
        }
      ],
      "output files": [
        {
          "name": "various",
          "description": "various"
        }
      ],
      "functions": [
        {
          "name": "_normal-settings",
          "description": "applys normal settings to colours, markers, title font size, label font size, key font size and line width"
        },
        {
          "name": "_default-settings",
          "description": "applys the default settings to colours, markers, title font size, label font size, key font size and line width"
        },
        {
          "name": "_set-chosen-settings",
          "description": "sets the chosen settings, normal or default"
        },
        {
          "name": "foo",
          "description": "bash tab completion example function"
        },
        {
          "name": "_csv2space",
          "description": "converts data format to space separated variable, currently only the conversion from csv to ssv is supported"
        },
        {
          "name": "_setsettingsstr",
          "description": "sets the settings strings"
        },
        {
          "name": "_data2ssv",
          "description": "as _csv2space"
        },
        {
          "name": "_setgnuplotstr",
          "description": "sets the gnuplotstr string"
        },
        {
          "name": "_gnuplot",
          "description": "passes the gnuplotstr string to gnuplot, echos gnuplotstr to $savefilename_inputs to keep a record of how savefilename was generted, echoes a link to the savefilename_inputs and a link to the gnuplot output ($savefilename.svg)"
        },
        {
          "name": "_save_last",
          "description": "save the last gnuplot settings to ~/last_gnuplot to allow rapid reuse"
        },
        {
          "name": "show-last",
          "description": "echoes the last settings used"
        },
        {
          "name": "xy-1x-ny",
          "description": "generates an multiline xy scatter plots where all the lines have the same x-values $1 data, $2 datatype, $3 plot title, $4 xlabel, $5 ylabel, $6 lines, $7 chosensettings, $8 save, $9 savefilename"
        },
        {
          "name": "xy-mx-ny",
          "description": "generates an multiline xy scatter plot where all the lines do not need to have the same x values, $1 data, $2 datatype $3 title, $4 xlabel, $5 ylabel, $6 lines, $7 chosensettings, $8 save, %9 savefilename"
        },
        {
          "name": "commands",
          "description": "bash tab completion function"
        }
      ],
      "associated commands": [],
      "dependants": [
        "gnuplot"
      ],
      "logfile": "None",
      "status": "functional"
    }
  ]
}
