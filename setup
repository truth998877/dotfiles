#!/bin/bash

#sets a system up to use the dotfiles repo
#assumes git is installed, and dotfiles repo has been cloned into $HOME/repos/github.com/$GITUSER/dotfiles

set -e

if [[ -f "$HOME/alreadysetup" ]]; then
  echo "Already set up"
  exit 0
fi

source set-platform-end

if [[ $END != work ]]; then

for i in .bashrc .dircolors .profile logbooks.json scripts-index.json scripts-index-testing.json scripts-index-schema.json; do
  if [[ -f "$HOME/$i" ]];then
    cp -p "$HOME/$i" "$HOME/$i-orig"
  else
   echo "$i not found"
  fi
  ln -sf "$PWD/$i" "$HOME/$i"
done


if [[ ! -d $HOME/.bashrc.d ]]; then
  mkdir -p "$HOME/.bashrc.d"
fi
ln -sf "$PWD/.bashrc.d/" "$HOME/.bashrc.d"

if [[ ! -d $HOME/templates ]]; then
  mkdir -p "$HOME/templates"
fi
ln -sf "$PWD/templates/" "$HOME/templates"

fi


#ln -sf "$PWD/.bashrc" "$HOME/.bashrc"
#ln -sf "$PWD/.dircolors" "$HOME/.dircolors"
#ln -sf "$PWD/.inputrc" "$HOME/.inputrc"
#ln -sf "$PWD/.profile" "$HOME/.profile"
#ln -sf "$PWD/.profile" "$HOME/.bash_profile"
#ln -sf "$PWD/scripts" "$HOME/Scripts"


for i in vim tmux ssh w3m; do
  cd $i && ./setup
  cd -
done

if [[ $END == work ]]; then
  ./setup-dotfiles-git-bash
fi

echo "Setting already setup flag"
touch $HOME/alreadysetup

echo "To finalise setup, run 'exec bash -l'"
